import unittest
from nextactions.board import Board
from nextactions.card import Card
from nextactions.trello import Trello
from unittest.mock import MagicMock


class TestCard(unittest.TestCase):

    def testIsAutoGenerated(self):
        card1 = Card(None, self._getCardJson())
        card2_desc = "http://trello.com/c/123 " + Card.AUTO_GENERATED_TEXT
        card2 = Card(None, self._getCardJson({'desc': card2_desc}))
        self.assertFalse(card1.isAutoGenerated())
        self.assertTrue(card2.isAutoGenerated())

    def _getCardJson(self, override={}):
        defaults = {
            'id': "123",
            'name': "Card",
            'idBoard': "456",
            'desc': "Test",
            'url': "fake"
        }
        return {**defaults, **override}

    def testGetProjectBoardInvalid(self):
        card = Card(None, self._getCardJson())
        with self.assertRaises(ValueError):
            card.getProjectBoard()

    def testGetProjectBoard(self):
        trello = Trello(None)
        board = Board(trello, {'id': "789", 'name': "Test"})
        trello.getBoardById = MagicMock(return_value=board)
        card_desc = "http://trello.com/c/789"
        card = Card(trello, self._getCardJson({'desc': card_desc}))
        project_board = card.getProjectBoard()
        trello.getBoardById.assert_called_once_with("789")
        self.assertEqual(project_board, board)

    def testNotEqual(self):
        card1 = Card(None, self._getCardJson())
        card2 = Card(None, self._getCardJson({'id': "456"}))
        self.assertFalse(card1 == card2)

    def testEqual(self):
        card1 = Card(None, self._getCardJson())
        card2 = Card(None, self._getCardJson())
        self.assertEqual(card1, card2)

    def testLinksTo(self):
        card1 = Card(None, self._getCardJson({
            'desc': "https://trello.com/c/test\n\n"
                    + Card.AUTO_GENERATED_TEXT
        }))
        card2 = Card(None, self._getCardJson({
            'url': "https://trello.com/c/test"
        }))
        self.assertFalse(card2.linksTo(card1))
        self.assertTrue(card1.linksTo(card2))
